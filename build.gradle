// -----------------------------------------------------------------------------
// main gradle build file for Spring AMQP
//
// - run `./gradlew build` to kick off a complete compile-and-test
//
// - the following imports are from groovy and/or java classes in buildSrc/
//   or from jars on 'buildscript' classpath (in our case, it's all buildSrc)
//   sources in buildSrc are compiled and available on the classpath automatically
// -----------------------------------------------------------------------------
import org.springframework.build.Version
import org.springframework.build.Version.ReleaseType
import static org.springframework.build.RabbitUtils.rabbitServerIsRunning

// add basic tasks like 'clean'
apply plugin: 'base'


// -----------------------------------------------------------------------------
// configuration for all projects including this one (the root project)
//
// see: settings.gradle for list of all subprojects
// -----------------------------------------------------------------------------
allprojects {
    group = 'org.springframework.amqp'
    version = new Version('1.0.0.BUILD-SNAPSHOT')

    repositories {
        mavenRepo urls: "file://" + System.properties['user.home'] + "/.m2/repository"
        mavenCentral()
        mavenRepo urls: 'http://repository.springsource.com/maven/bundles/milestone'
        mavenRepo urls: 'http://maven.springframework.org/snapshot/'
        mavenRepo urls: 'http://maven.springframework.org/release'
        mavenRepo urls: 'http://repository.springsource.com/maven/bundles/release'
        mavenRepo urls: 'http://repository.springsource.com/maven/bundles/external'
    }
}


// -----------------------------------------------------------------------------
// configuration for all subprojects
// - empty for now, but shown for completeness
//
// see: settings.gradle for list of all subprojects
// -----------------------------------------------------------------------------
subprojects { }


// -----------------------------------------------------------------------------
// create collections of subprojects - each will receive their own configuration
// - all subprojects within spring-amqp-samples are 'sample projects'
// - all subprojects that start with spring-* are 'java projects'
// - all non-sample java projects are considered 'core projects'
// - documentation-related subprojects are not collected here (there's just one)
//
// see: configure(*) sections below
// -----------------------------------------------------------------------------
sampleparent = project(':spring-amqp-samples')

sampleprojects = sampleparent.subprojects

javaprojects = subprojects.findAll { project ->
    project.path.startsWith(':spring-') && project != sampleparent
}

coreprojects = javaprojects - sampleprojects

// -----------------------------------------------------------------------------
// configuration for all java subprojects
// -----------------------------------------------------------------------------
configure(javaprojects) {
    apply plugin: 'java'
    apply plugin: 'eclipse'

    springVersion = '3.0.3.RELEASE'
    rabbitVersion = '1.8.0'
    erlangVersion = '1.5.3'
    slf4jVersion = '1.5.10'

    // dependencies that are common across all java projects
    dependencies {
        testCompile 'junit:junit:4.7'
    }
}


// -----------------------------------------------------------------------------
// configuration for all core (non-sample) java subprojects
//
// see: individual project(*) configurations below
// -----------------------------------------------------------------------------
configure(coreprojects) {
    erlangLicense = false

    apply from: "$rootDir/gradle/bundlor.gradle"
    //apply from: "$rootDir/gradle/maven-deployment.gradle"

    dependencies {
        compile ('log4j:log4j:1.2.15') {
            exclude group: 'javax.mail', name: 'mail'
            exclude group: 'javax.jms', name: 'jms'
            exclude group: 'com.sun.jdmk', name: 'jmxtools'
            exclude group: 'com.sun.jmx', name: 'jmxri'
        }
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        runtime "org.slf4j:slf4j-log4j12:$slf4jVersion"
    }
}

// -----------------------------------------------------------------------------
// configuration for all sample projects
//
// see: individual project(*) configurations below
// -----------------------------------------------------------------------------
configure(sampleprojects) {
    apply plugin: 'maven'
    apply from: "$rootDir/gradle/pom-generation.gradle"
    group = 'org.springframework.amqp.samples'

    dependencies {
        compile project(':spring-amqp-core')
        compile project(':spring-rabbit')
        compile project(':spring-rabbit-admin')
        compile "com.rabbitmq:amqp-client:$rabbitVersion"
        compile "org.springframework:spring-aop:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"
        runtime 'log4j:log4j:1.2.14'
        runtime 'cglib:cglib-nodep:2.2'
        runtime 'aspectj:aspectjrt:1.5.4'
        runtime 'aspectj:aspectjweaver:1.5.4'
        runtime "org.springframework:spring-context-support:$springVersion"
        testCompile "org.springframework:spring-test:$springVersion"
    }
}


// -----------------------------------------------------------------------------
// configuration for each individual core java subproject
//
// see: configure(javaprojects) above for general config
// -----------------------------------------------------------------------------
project('spring-amqp-core') {
    dependencies {
        compile "org.springframework:spring-core:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"
        compile 'org.codehaus.jackson:jackson-mapper-asl:1.4.3'
    }
}

project('spring-otp') {
    dependencies {
        compile "org.springframework:spring-beans:$springVersion"
        compile "org.erlang.otp:jinterface:$erlangVersion"
    }
}

project('spring-rabbit') {
    dependencies {
        compile project(':spring-amqp-core')
        compile "com.rabbitmq:amqp-client:$rabbitVersion"
        compile "org.springframework:spring-core:$springVersion"
        compile "org.springframework:spring-beans:$springVersion"
        compile "org.springframework:spring-aop:$springVersion"
        compile "org.springframework:spring-context:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"
        compile "org.springframework:spring-tx:$springVersion"
        testCompile 'org.mockito:mockito-all:1.8.4'
    }
}

project('spring-rabbit-admin') {
    erlangLicense = true

    dependencies {
        compile project(':spring-amqp-core')
        compile project(':spring-otp')
        compile project(':spring-rabbit')
        compile "com.rabbitmq:amqp-client:$rabbitVersion"
        compile "org.springframework:spring-aop:$springVersion"
        compile "org.springframework:spring-context:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"
        compile "org.springframework:spring-test:$springVersion"
        compile "org.springframework:spring-tx:$springVersion"
        compile 'junit:junit:4.7'
        testCompile "org.erlang.otp:jinterface:$erlangVersion"
        testCompile "org.springframework:spring-beans:$springVersion"
        testCompile "org.springframework:spring-core:$springVersion"
    }
}

// -----------------------------------------------------------------------------
// configuration for each individual sample subproject
//
// see: configure(sampleprojects) above for general config
// -----------------------------------------------------------------------------
project(':spring-amqp-samples:helloworld') {
    generatePom {
        artifactId = 'helloworld'
        artifactName = 'Spring AMQP Hello World'
        artifactDescription = 'Shows the usage of Spring AMQP integration classes'
    }
}

project(':spring-amqp-samples:stocks') {
    dependencies {
        compile "org.springframework:spring-beans:$springVersion"
        compile "org.springframework:spring-core:$springVersion"
        compile "org.springframework:spring-context:$springVersion"
        compile "com.jgoodies:forms:1.2.1"
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        runtime "org.slf4j:slf4j-log4j12:$slf4jVersion"
    }

    generatePom {
        artifactId = 'stocks'
        artifactName = 'Spring Rabbit Stocks'
        artifactDescription = 'Shows the usage of Spring Rabbit integration classes'
    }

    // Client and Server @Test cases need rabbitmq-server up
    test.onlyIf { rabbitServerIsRunning() || this.hasProperty('forceServerTests') }
}


// -----------------------------------------------------------------------------
// import tasks related to releasing and managing the project
// -----------------------------------------------------------------------------
//apply from: "$rootDir/gradle/release.gradle"
//apply from: "$rootDir/gradle/wrapper.gradle"
