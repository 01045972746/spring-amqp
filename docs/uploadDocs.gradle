task build(dependsOn: assemble) {
    taskGroup = 'build'
}

configurations { archives }
artifacts { archives docsArchive }

configurations { scpAntTask }
dependencies {
    scpAntTask("org.apache.ant:ant-jsch:1.8.1")
}

gradle.taskGraph.whenReady { graph ->
    checkForProps(graph: graph, taskPath: project.path + ':uploadArchives', requiredProps: ['sshHost', 'sshUsername', 'remoteSiteDir'])
}

uploadArchives {
    def sshHost = project.properties.sshHost
    def sshUsername = project.properties.sshUsername
    def remoteSiteDir = project.properties.remoteSiteDir
    def docUrl = "http://${sshHost}/${rootProject.name}/docs/${version.wildcardValue}/api"
    def remoteDocsDir = "${remoteSiteDir}/docs/${version.wildcardValue}"
    def fqRemoteDir = "${sshUsername}@${sshHost}:${remoteDocsDir}"

    description = "Uploads API documentation" + (sshHost ? " to ${docUrl}" : ": Host is not specified")

    uploadDescriptor = false

    taskGroup = 'buildmaster'

    repositories {
        add(new org.apache.ivy.plugins.resolver.SshResolver()) {
            name = 'sshHost: ' + sshHost // used for debugging
            host = sshHost
            user = sshUsername
            if (project.hasProperty('remoteSiteDir')) {
                keyFile = sshPrivateKey as File
            }
            addArtifactPattern "${remoteDocsDir}/${docsArchive.archiveName}"
        }
    }

    configurations { scpAntTask }
    dependencies { scpAntTask 'org.apache.ant:ant-jsch:1.8.1' }

    doFirst {
        println "Uploading: ${docsArchive.archivePath} to ${fqRemoteDir}"
    }

    doLast {
        project.ant {
            taskdef(name: 'sshexec',
                    classname: 'org.apache.tools.ant.taskdefs.optional.ssh.SSHExec',
                    classpath: configurations.scpAntTask.asPath)

            // copy the archive, unpack it, then delete it
            def unpackCommand = "cd ${remoteDocsDir} && tar -xjf ${docsArchive.archiveName}"
            def deleteCommand = "rm ${remoteDocsDir}/${docsArchive.archiveName}"

            println "sshexec ${unpackCommand}"
            sshexec(host: sshHost, username: sshUsername, keyfile: sshPrivateKey, command: unpackCommand)
            println "sshexec ${deleteCommand}"
            sshexec(host: sshHost, username: sshUsername, keyfile: sshPrivateKey, command: deleteCommand)
            println "UPLOAD SUCCESSFUL - validate by visiting ${docUrl}"
        }
    }
}
